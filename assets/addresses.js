(()=>{"use strict";var __webpack_modules__={"./src/scripts/addresses.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sections_Addresses_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sections/Addresses.class.js */ \"./src/scripts/sections/Addresses.class.js\");\n/* harmony import */ var _sections_Addresses_class_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sections_Addresses_class_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Register Section\n(function () {\n  return window.bluedgeusa.sections.register('addresses', window.bluedgeusa.theme.Addresses);\n})();\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/addresses.js?")},"./src/scripts/sections/Addresses.class.js":()=>{eval("/**\r\n * JS Class implementation of Shopify Core\r\n * Section Class is exported to window.bluedgeusa.theme namespace\r\n *\r\n * NOTE: Need Polyfill for older browsers\r\n */\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Addresses = /*#__PURE__*/function () {\n  function Addresses(container, type, id) {\n    var _this = this;\n    _classCallCheck(this, Addresses);\n    this._container = container;\n    this._type = type;\n    this._id = id;\n\n    // SELECTORS\n    this._selectors = {\n      newAddressBtn: '[data-address-add]',\n      editAddressBtns: '[data-address-edit]',\n      deleteAddressBtns: '[data-address-delete]',\n      modalSaveBtn: '[data-modal-submit]',\n      addressModal: '#addressModal',\n      modalTitle: '#modal-title',\n      form: '#address_form_new',\n      formInputs: '[data-form-input]'\n    };\n\n    // ELEMENTS\n    this.newAddressBtn = this._container.querySelector(this._selectors.newAddressBtn);\n    this.editAddressBtns = this._container.querySelectorAll(this._selectors.editAddressBtns);\n    this.deleteAddressBtns = this._container.querySelectorAll(this._selectors.deleteAddressBtns);\n    this.modalSaveBtn = this._container.querySelector(this._selectors.modalSaveBtn);\n    this.addressModal = this._container.querySelector(this._selectors.addressModal);\n    this.modalTitle = this.addressModal.querySelector(this._selectors.modalTitle);\n    this.form = this.addressModal.querySelector(this._selectors.form);\n    this.formInputs = this.form.querySelectorAll(this._selectors.formInputs);\n\n    // EVENT LISTENERS\n    // Add new address\n    this.newAddressBtn.addEventListener('click', function (e) {\n      return _this.openAddressModal(e);\n    });\n    this.editAddressBtns.forEach(function (editBtn) {\n      return editBtn.addEventListener('click', function (e) {\n        return _this.openAddressModal(e);\n      });\n    });\n    this.deleteAddressBtns.forEach(function (deleteAddressBtns) {\n      return deleteAddressBtns.addEventListener('click', function (e) {\n        return _this.deleteAddress(e);\n      });\n    });\n\n    // Hidden modal\n    this.addressModal.addEventListener('hidden.bs.modal', function () {\n      return _this.resetForm();\n    });\n\n    // INIT\n    this.initializeAddressForm();\n  }\n\n  /**\r\n  * Called when modal is opened - IF Edit address - assign attribute to save btn and call populateForm()\r\n  * @param {Object} e Event Object\r\n   */\n  _createClass(Addresses, [{\n    key: \"openAddressModal\",\n    value: function openAddressModal(e) {\n      // Check e attributes\n      if (e.target.hasAttribute('data-address-edit')) {\n        // Edit address\n        var addressID = parseInt(e.target.getAttribute('data-address-edit'));\n        this.modalSaveBtn.setAttribute('data-address-id', addressID);\n        this.updateFormAction(addressID);\n        this.addPut();\n        this.populateForm(addressID);\n        this.setFormText(true);\n      } else {\n        // New address\n        this.updateFormAction();\n        this.setFormText();\n      }\n    }\n\n    /**\r\n    * Update the form action depending on if we are adding NEW address or EDITING existing address\r\n    * @param {Integer} addressID\r\n     */\n  }, {\n    key: \"updateFormAction\",\n    value: function updateFormAction(addressID) {\n      if (addressID) {\n        // Edit address\n        this.form.setAttribute('action', '/account/addresses/' + addressID);\n        this.form.id = 'address_form_' + addressID;\n      } else {\n        //new address\n        this.form.setAttribute('action', '/account/addresses');\n        this.form.id = 'address_form_new';\n      }\n    }\n\n    /**\r\n    * Edit forms require a hidden input that signals a PUT request to Shopify\r\n     */\n  }, {\n    key: \"addPut\",\n    value: function addPut() {\n      // Create element\n      var putInput = document.createElement('input');\n      putInput.type = 'hidden';\n      putInput.name = \"_method\";\n      putInput.value = 'put';\n      putInput.setAttribute('data-hidden-input', '');\n      this.form.appendChild(putInput);\n    }\n\n    /**\r\n    * Sets proper modal title and button text for either NEW address or EDIT address\r\n    * @param {Boolean} editForm\r\n     */\n  }, {\n    key: \"setFormText\",\n    value: function setFormText(editForm) {\n      this.modalTitle.textContent = editForm ? window.bluedgeusa.theme.modalTitleEdit : window.bluedgeusa.theme.modalTitleNew;\n    }\n\n    /**\r\n    * Populates form fields using window.bluedgeusa.theme.customerAddresses object\r\n    * @param {Integer} addressID\r\n     */\n  }, {\n    key: \"populateForm\",\n    value: function populateForm(addressID) {\n      // Get address data from window.bluedgeusa.theme.customerAddresses\n      var currentAddress = window.bluedgeusa.theme.customerAddresses.filter(function (address) {\n        return address.id === addressID;\n      })[0];\n\n      // Fill out fields values using JS\n      for (var i = 0; i < this.formInputs.length; i++) {\n        // Clean field name\n        var tag = this.formInputs[i].name.replace('address[', '');\n        tag = tag.slice(0, -1);\n        if (currentAddress[tag]) {\n          if (tag === 'default') {\n            this.formInputs[i].checked = true;\n          } else {\n            this.formInputs[i].value = currentAddress[tag];\n          }\n        }\n      }\n    }\n\n    /**\r\n    * Sends DELETE request to Shopify with which address to delete\r\n    * @param {Object} e\r\n     */\n  }, {\n    key: \"deleteAddress\",\n    value: function deleteAddress(e) {\n      var addressID = e.target.getAttribute('data-address-delete'),\n        confirmMessage = e.target.getAttribute('data-confirm-message');\n      if (confirm(confirmMessage || 'Are you sure you wish to delete this address?')) {\n        Shopify.postLink('/account/addresses/' + addressID, {\n          parameters: {\n            _method: 'delete'\n          }\n        });\n      }\n    }\n\n    /**\r\n     * Initialize the address form\r\n     */\n  }, {\n    key: \"initializeAddressForm\",\n    value: function initializeAddressForm() {\n      // Initialize observers on address selectors, defined in shopify_common.js\n      if (Shopify) {\n        new Shopify.CountryProvinceSelector('AddressCountry', 'AddressProvince', {\n          hideElement: 'AddressProvinceContainer'\n        });\n      }\n    }\n\n    /**\r\n     * Reset Modal Form\r\n     */\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      // Remove attribute on save btn\n      this.modalSaveBtn.removeAttribute('data-address-id');\n\n      // Reset fields\n      this.form.reset();\n\n      // Remove hidden input\n      var hidden = this.form.querySelector('[data-hidden-input]');\n      if (hidden) hidden.remove();\n    }\n  }]);\n  return Addresses;\n}(); // Export to theme namespace\nwindow.bluedgeusa.theme.Addresses = Addresses;\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/sections/Addresses.class.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var s=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](s,s.exports,__webpack_require__),s.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var s in t)__webpack_require__.o(t,s)&&!__webpack_require__.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/scripts/addresses.js")})();