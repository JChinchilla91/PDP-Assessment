(()=>{"use strict";var __webpack_modules__={"./src/scripts/sections/VideoBanner.class.js":()=>{eval("/**\r\n * Youtube Facade - \r\n * Inspiration: https://github.com/justinribeiro/lite-youtube\r\n * Inspiration: https://github.com/paulirish/lite-youtube-embed/blob/master/src/lite-yt-embed.js\r\n * Loaded from sections/video-banner.liquid\r\n *\r\n */\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar VideoBanner = /*#__PURE__*/function () {\n  function VideoBanner(container, type, id) {\n    _classCallCheck(this, VideoBanner);\n    this._container = container;\n    this._type = type;\n    this._id = id;\n\n    // PARAMS\n    this.provider = this._container.getAttribute('data-provider');\n    this.videoID = this._container.getAttribute('data-video-id');\n    this.autoplay = this._container.getAttribute('data-video-autoplay') === 'true' ? 1 : 0;\n    this.videoWrapper = document.getElementById('V' + this._id);\n    this.iframeLoaded = false;\n    this.observerOffset = '600px';\n    this.preconnected = false;\n    this.player = null;\n    this.videoPlaying = false;\n    this.videoMuted = false;\n    this.mediaWidth = 0;\n    this.mediaHeight = 0;\n\n    // TEST PARAMS\n    if (!this.provider || !this.videoID) return;\n\n    // YOUTUBE\n    if (this.provider === 'youtube') this.initYoutubePoster();else if (this.provider == 'vimeo') this.initVimeoPoster();\n\n    // IF AUTOPLAY init Intersection Observer\n    if (this.autoplay === 1) this.initIntersectionObserver();else\n      // ADD play button for Vimeo or Youtube\n      this.addPlayButton();\n  }\n\n  /**\r\n   * Init Intersect Observer\r\n   * Lazy load on boundRect enter\r\n   */\n  _createClass(VideoBanner, [{\n    key: \"initIntersectionObserver\",\n    value: function initIntersectionObserver() {\n      var _this = this;\n      // Check Support\n      if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window) {\n        var options = {\n          root: null,\n          rootMargin: this.observerOffset,\n          threshold: 0\n        };\n        var observer = new IntersectionObserver(function (entries, observer) {\n          entries.forEach(function (entry) {\n            if (entry.isIntersecting && !_this.iframeLoaded) {\n              if (_this.provider != 'shopify') {\n                _this.warmConnections();\n                _this.injectVideoPlayer();\n              }\n              observer.unobserve(_this._container);\n            }\n          });\n        }, options);\n\n        // Observe\n        observer.observe(this._container);\n      }\n    }\n  }, {\n    key: \"initYoutubePoster\",\n    value: function initYoutubePoster() {\n      var posterUrl = \"https://i.ytimg.com/vi/\".concat(this.videoID, \"/maxresdefault.jpg\");\n      this.addPrefetch('preload', posterUrl, 'image');\n      this._container.style.backgroundPosition = 'center center';\n      this._container.style.backgroundSize = 'cover';\n      this._container.style.backgroundImage = \"url(\\\"\".concat(posterUrl, \"\\\")\");\n    }\n\n    /**\r\n     * Get Vimeo poster\r\n     * Note: Must use no-cors on fetch file from api in order to get thumbnail URL\r\n     */\n  }, {\n    key: \"initVimeoPoster\",\n    value: function initVimeoPoster() {\n      var _this2 = this;\n      this.addPrefetch('preconnect', 'https://i.vimeocdn.com/');\n\n      // SUCCESS\n      var success = function success(r) {\n        // We expect an array\n        if (!r.length) return;\n        var l = r[0]['thumbnail_large'];\n        _this2.mediaWidth = r[0][\"width\"];\n        _this2.mediaHeight = r[0][\"height\"];\n        var imgId = l.substring(l.lastIndexOf(\"/\") + 1).split(\"_\")[0];\n        var posterUrl = \"https://i.vimeocdn.com/video/\".concat(imgId, \".jpg?mw=\").concat(_this2.mediaWidth, \"&mh=\").concat(_this2.mediaHeight, \"&q=70\");\n        _this2._container.style.backgroundPosition = 'center center';\n        _this2._container.style.backgroundSize = 'cover';\n        _this2._container.style.backgroundImage = \"url(\\\"\".concat(posterUrl, \"\\\")\");\n        _this2._container.querySelector(\".video-player\").style.setProperty('--bs-aspect-ratio', \"calc(\".concat(_this2.mediaHeight, \" / \").concat(_this2.mediaWidth, \" * 100%)\"));\n      };\n\n      // FAIL (We need a strategy Here !!!!)\n      var fail = function fail() {\n        console.log(\"Vimeo video poster error - Video ID: \".concat(_this2.videoID));\n      };\n      var options = {\n        noOption: true,\n        // Ignore all additional options and hedears\n        url: \"https://vimeo.com/api/v2/video/\".concat(this.videoID, \".json\")\n      };\n\n      // GET JSON data\n      window.bluedgeusa.core.Connect.fetch(options, null, success, fail);\n    }\n\n    /**\r\n     * Initialize YOUTUBE video\r\n     * Player Vars: https://developers.google.com/youtube/player_parameters\r\n     */\n  }, {\n    key: \"injectVideoPlayer\",\n    value: function injectVideoPlayer() {\n      var playerVars = this.provider === 'youtube' ? {\n        height: \"100%\",\n        width: \"100%\",\n        mute: 1,\n        autoplay: 1,\n        controls: 0,\n        modestbranding: 1,\n        playsinline: 1,\n        loop: 1\n      } // Youtube\n      : {\n        muted: 1,\n        autoplay: 1,\n        byline: 0,\n        background: 1,\n        portrait: 0,\n        loop: 1,\n        title: 0\n      }; // Vimeo\n\n      var params = new URLSearchParams(playerVars);\n      var iframeEl = document.createElement('iframe');\n      iframeEl.width = '100%';\n      iframeEl.height = '100%';\n      iframeEl.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture';\n      iframeEl.allowFullscreen = true;\n      iframeEl.title = 'Video Player for: ' + this.videoID;\n\n      // YOUTUBE\n      if (this.provider === 'youtube') iframeEl.src = \"https://www.youtube-nocookie.com/embed/\".concat(this.videoID, \"?\").concat(params.toString());else\n        // VIMEO\n        iframeEl.src = \"https://player.vimeo.com/video/\".concat(this.videoID, \"?\").concat(params.toString());\n      this.videoWrapper.append(iframeEl);\n\n      // Set as active\n      this.videoWrapper.classList.add('activated');\n\n      // Set focus for a11y\n      this.videoWrapper.querySelector('iframe').focus();\n    }\n\n    /**\r\n     * Add a <link rel={preload | preconnect} ...> to the head\r\n     * @param {String} kind\r\n     * @param {String} url\r\n     * @param {String} as\r\n     */\n  }, {\n    key: \"addPrefetch\",\n    value: function addPrefetch(kind, url, as) {\n      var linkEl = document.createElement('link');\n      linkEl.rel = kind;\n      linkEl.href = url;\n      if (as) linkEl.as = as;\n      document.head.append(linkEl);\n    }\n\n    /**\r\n     * YOUTUBE PRECONNECT\r\n     * Begin pre-connecting to warm up the iframe load\r\n     * Since the embed's network requests load within its iframe,\r\n     * preload/prefetch'ing them outside the iframe will only cause double-downloads.\r\n     * So, the best we can do is warm up a few connections to origins that are in the critical path.\r\n     */\n  }, {\n    key: \"warmConnectionsYoutube\",\n    value: function warmConnectionsYoutube() {\n      if (this.preconnected) return;\n\n      // The iframe document and most of its sub-resources come right off youtube.com\n      this.addPrefetch('preconnect', 'https://www.youtube-nocookie.com');\n\n      // The botguard script is fetched off from google.com\n      this.addPrefetch('preconnect', 'https://www.google.com');\n\n      // Not certain if these ad related domains are in the critical path. Could verify with domain-specific throttling.\n      this.addPrefetch('preconnect', 'https://googleads.g.doubleclick.net');\n      this.addPrefetch('preconnect', 'https://static.doubleclick.net');\n      this.preconnected = true;\n    }\n\n    /**\r\n     * VIMEO PRECONNECT\r\n     * Begin pre-connecting to warm up the iframe load\r\n     * Since the embed's network requests load within its iframe,\r\n     * preload/prefetch'ing them outside the iframe will only cause double-downloads.\r\n     * So, the best we can do is warm up a few connections to origins that are in the critical path.\r\n     */\n  }, {\n    key: \"warmConnectionsVimeo\",\n    value: function warmConnectionsVimeo() {\n      if (this.preconnected) return;\n\n      // The iframe document and most of its sub-resources come right off player.vimeo.com\n      this.addPrefetch('preconnect', 'https://player.vimeo.com');\n      // Images\n      this.addPrefetch('preconnect', 'https://i.vimeocdn.com');\n      // Files .js, .css\n      this.addPrefetch('preconnect', 'https://f.vimeocdn.com');\n      // Metrics\n      this.addPrefetch('preconnect', 'https://fresnel.vimeocdn.com');\n      this.preconnected = true;\n    }\n\n    /**\r\n     * Warm connections\r\n     * Provider value trigger the right method\r\n     */\n  }, {\n    key: \"warmConnections\",\n    value: function warmConnections() {\n      if (this.provider === 'youtube') this.warmConnectionsYoutube();else this.warmConnectionsVimeo();\n    }\n\n    /**\r\n     * Add Play Button\r\n     * ADD PLAY BUTTON if Autoplay === false\r\n     */\n  }, {\n    key: \"addPlayButton\",\n    value: function addPlayButton() {\n      var _this3 = this;\n      var playBtnEl = document.createElement('button');\n      playBtnEl.type = 'button';\n      playBtnEl.classList.add('playbtn');\n      playBtnEl.setAttribute('aria-label', 'Video Play Button');\n      playBtnEl.innerHTML = \"<span class='d-none'>play</span>\";\n      this.videoWrapper.append(playBtnEl);\n\n      // EVENT HANDLERS\n      // Once the user clicks and the provider is not Shopify, add the real iframe and drop our play button if\n      if (this.provider != 'shopify') {\n        // On hover (or tap), warm up the TCP connections we're (likely) about to use.\n        this.videoWrapper.addEventListener('pointerover', function () {\n          return _this3.warmConnections();\n        }, {\n          once: true\n        });\n        this.videoWrapper.addEventListener('click', function () {\n          return _this3.injectVideoPlayer();\n        });\n      } else\n        // Else toggle play/pause video\n        this.videoWrapper.addEventListener('click', function (e) {\n          return _this3.handleVideoClick(e);\n        });\n    }\n\n    /**\r\n     * Handle video click - event delegation\r\n     * @param {Object} e\r\n     */\n  }, {\n    key: \"handleVideoClick\",\n    value: function handleVideoClick(e) {\n      var target = e.target,\n        soundIcon = target.hasAttribute('data-sound-icon');\n      // If sound icon is clicked, toggle mute\n      if (soundIcon) this.toggleMuteVideo();else\n        // Otherwise, toggle pause/play\n        this.togglePlayVideo();\n    }\n\n    /**\r\n     * Toggle between playing and pausing video native video element\r\n     */\n  }, {\n    key: \"togglePlayVideo\",\n    value: function togglePlayVideo() {\n      // Get video element\n      var videoEl = this.videoWrapper.querySelector('video');\n\n      // Fail fast\n      if (!videoEl) return;\n\n      // Show/hide play button\n      this.videoWrapper.classList.toggle('activated');\n\n      // Play if not already playing, pause if it is\n      if (!this.videoPlaying) videoEl.play();else videoEl.pause();\n\n      // Update state of video\n      this.videoPlaying = !this.videoPlaying;\n    }\n\n    /**\r\n     * Toggle Mute on video\r\n     */\n  }, {\n    key: \"toggleMuteVideo\",\n    value: function toggleMuteVideo() {\n      // Get video element\n      var videoEl = this.videoWrapper.querySelector('video');\n      var soundIcon = this.videoWrapper.querySelector('.sound-icon');\n\n      // Fail fast\n      if (!videoEl || !soundIcon) return;\n\n      // Toggle video volume state\n      if (!this.videoMuted) videoEl.volume = 0.0;else videoEl.volume = 1.0;\n\n      // Update state of mute variable\n      this.videoMuted = !this.videoMuted;\n      soundIcon.classList.toggle('sound');\n    }\n\n    /**\r\n     * Event callback for Theme Editor `shopify:section:load` event\r\n    */\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      // TEST PARAMS\n      if (!this.provider || !this.videoID) return;\n\n      // YOUTUBE\n      if (this.provider === 'youtube') this.initYoutubePoster();else this.initVimeoPoster();\n\n      // IF AUTOPLAY init Intersection Observer\n      if (this.autoplay === 1) this.initIntersectionObserver();else\n        // ADD play button for Vimeo or Youtube\n        this.addPlayButton();\n      window.lazyLoadInstance.update();\n    }\n\n    /**\r\n     * Event callback for Theme Editor `shopify:section:unload` event\r\n    */\n  }, {\n    key: \"onUnload\",\n    value: function onUnload() {\n      var _this4 = this;\n      // REMOVE EVENT HANDLERS\n      // On hover (or tap), warm up the TCP connections we're (likely) about to use.\n      this.videoWrapper.removeEventListener('pointerover', function () {\n        return _this4.warmConnections();\n      }, {\n        once: true\n      });\n\n      // Once the user clicks, add the real iframe and drop our play button\n      this.videoWrapper.removeEventListener('click', function () {\n        return _this4.injectVideoPlayer();\n      });\n    }\n  }]);\n  return VideoBanner;\n}(); // Export to theme namespace\nwindow.bluedgeusa.theme.VideoBanner = VideoBanner;\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/sections/VideoBanner.class.js?")},"./src/scripts/video-banner.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sections_VideoBanner_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sections/VideoBanner.class.js */ \"./src/scripts/sections/VideoBanner.class.js\");\n/* harmony import */ var _sections_VideoBanner_class_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sections_VideoBanner_class_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Register Section\n(function () {\n  return window.bluedgeusa.sections.register('videoBanner', window.bluedgeusa.theme.VideoBanner);\n})();\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/video-banner.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/scripts/video-banner.js")})();