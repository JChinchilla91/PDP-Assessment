(()=>{var __webpack_modules__={"./src/scripts/facets.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sections_Facets_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sections/Facets.class.js */ \"./src/scripts/sections/Facets.class.js\");\n/* harmony import */ var _sections_Facets_class_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sections_Facets_class_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Register Section\n(function () {\n  return window.bluedgeusa.sections.register('shopifyFacets', window.bluedgeusa.theme.Facets);\n})();\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/facets.js?")},"./src/scripts/sections/Facets.class.js":()=>{eval('function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n/**\r\n * Facets class\r\n * Manage all the aspect of the Shopify Filters\r\n * !! NOTE: we use JSON to update the Facets DOM - Much faster than search the incoming DOM\r\n */\nvar Facets = /*#__PURE__*/function () {\n  function Facets(container, type, id) {\n    _classCallCheck(this, Facets);\n    this._container = container;\n    this._type = type;\n    this._id = id;\n\n    // SELECTORS\n    this._selectors = {\n      facetsDataId: \'facetsData\',\n      forms: \'[data-filter-form]\',\n      productGridId: \'productGridContainer\',\n      productCountId: \'productCount\',\n      productCount: \'[data-product-count]\',\n      facetTags: \'[data-facet-tags]\',\n      defaultSort: \'[data-filter-default-sort]\',\n      facetsRemove: \'[data-facet-remove]\'\n    };\n\n    // ELEMENTS\n    this.forms = this._container.querySelectorAll(this._selectors.forms);\n    this.activeForm = null;\n    this.productGridContainer = document.getElementById(this._selectors.productGridId);\n    this.productCounts = this._container.querySelectorAll(this._selectors.productCount);\n    this.facetTags = this._container.querySelectorAll(this._selectors.facetTags);\n    this.facetsRemove = this._container.querySelectorAll(this._selectors.facetsRemove);\n\n    // set the Active form (visible: Mobile vs Desktop)\n    this.setActiveForm();\n\n    // DATA\n    this.dataCache = [];\n    this.searchParams = this.getSearchParam();\n    this.debounceSpeed = 500;\n    this.searchParamsInitial = window.location.search.slice(1);\n    this.searchParamsPrev = window.location.search.slice(1);\n    this.defaultSort = this.getDefaultSortValue();\n\n    // INIT\n    this.init();\n  }\n\n  /**\r\n   * Init\r\n   */\n  _createClass(Facets, [{\n    key: "init",\n    value: function init() {\n      var _this = this;\n      this.initEventListeners();\n\n      // Reset Active form on Window resize (from Mobile to desktop)\n      window.addEventListener(\'resize\', window.bluedgeusa.core.Utils.debounce(function (e) {\n        return _this.setActiveForm(e);\n      }, this.debounceSpeed));\n    }\n\n    /**\r\n     * Fetch Page Manager\r\n     * Will use the cache when available or fetch\r\n     * Update prev search param + History state\r\n     * @param {String} url\r\n     * @param {Boolean} updateHistoryHash\r\n     */\n  }, {\n    key: "fetchPageManager",\n    value: function fetchPageManager() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var updateHistoryHash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      // Update search params\n      this.searchParams = this.getSearchParam();\n      this.searchParamsPrev = this.searchParams;\n      var hasCache = this.dataCache.some(function (data) {\n        return data.url === url;\n      });\n      url = url ? url : this.buildURL();\n      if (hasCache) this.fetchPageCache(url);else this.fetchPage(url);\n\n      // Update History Hash\n      if (updateHistoryHash) this.updateHistoryHash();\n    }\n\n    /**\r\n     * Fetch Page\r\n     * @param {String} url\r\n     */\n  }, {\n    key: "fetchPage",\n    value: function fetchPage(url) {\n      var _this2 = this;\n      fetch(url).then(function (r) {\n        return r.text();\n      }).then(function (html) {\n        // Add to Cache\n        _this2.dataCache.push({\n          url: url,\n          html: html\n        });\n\n        // Renders\n        _this2.updateFacets(html);\n        _this2.renderProductCount(html);\n        _this2.renderFacetTags(html);\n        _this2.renderProductGrid(html);\n      })["catch"](function (err) {\n        return _this2.renderFetchError(err);\n      });\n    }\n\n    /**\r\n     * Fetch Page Cache\r\n     * @param {String} url\r\n     */\n  }, {\n    key: "fetchPageCache",\n    value: function fetchPageCache(url) {\n      var cache = this.dataCache.find(function (data) {\n        return data.url === url;\n      });\n\n      // Renders\n      this.updateFacets(cache.html);\n      this.renderProductCount(cache.html);\n      this.renderFacetTags(cache.html);\n      this.renderProductGrid(cache.html);\n    }\n\n    /**\r\n     * Update Facets in the DOM\r\n     * Use JSON data to catch the filters by data attribute and manipulate them\r\n     * @param {DOM} html\r\n     */\n  }, {\n    key: "updateFacets",\n    value: function updateFacets(html) {\n      var _this3 = this;\n      try {\n        var facetsData = new DOMParser().parseFromString(html, \'text/html\').getElementById(this._selectors.facetsDataId).innerText;\n        var filters = JSON.parse(facetsData);\n        var searchParamObj = this.getSearchParamObj();\n\n        // Update Inputs\n        filters.forEach(function (filter) {\n          // Select all inputs (covers Mobile + Desktop)\n          var inputs = _this3.activeForm.querySelectorAll("input[data-facet-input=\\"".concat(filter.name, "\\"]"));\n          inputs.forEach(function (input) {\n            // Uncheck input if not in the URL parma anymore\n            var values = searchParamObj[input.name] || [];\n            if (!values.includes(input.value)) {\n              // Checkbox\n              if (input.type === \'checkbox\') {\n                // Avoid checkbox with 0 count to be checked\n                if (input.checked == true || filter.count === 0) input.checked = false;\n\n                // Number\n              } else if (input.type === \'number\') {\n                // Min Price\n                if (filter.name === \'filter-v-price-gte\' && !values.length) {\n                  input.value = 0; // No min range given by Shopify\n                }\n\n                // Max Price\n                if (filter.name === \'filter-v-price-lte\' && !values.length) {\n                  input.value = input.dataset.maxRange;\n                }\n              }\n            }\n\n            // Disabled is not products avail.\n            if (input.type === \'checkbox\') {\n              input.disabled = filter.count === 0;\n            }\n\n            // Update checkbox label\n            var label = input.nextElementSibling;\n            if (label) label.querySelector(\'span\').innerText = filter.count;\n          });\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    /**\r\n     * Render Product Grid\r\n     * @param {DOM} html\r\n     */\n  }, {\n    key: "renderProductGrid",\n    value: function renderProductGrid(html) {\n      // Reset product grid HTML\n      this.productGridContainer.innerHTML = \'\';\n      // Insert new recently parsed HTML\t\n      this.productGridContainer.innerHTML = new DOMParser().parseFromString(html, \'text/html\').getElementById(this._selectors.productGridId).innerHTML;\n      // Look for new images to lazyload\n      window.lazyLoadInstance.update();\n      // Dispatch Event\n      document.dispatchEvent(new CustomEvent(\'productsInjected\'));\n    }\n\n    /**\r\n     * Render Product Count\r\n     * @param {DOM} html\r\n     */\n  }, {\n    key: "renderProductCount",\n    value: function renderProductCount(html) {\n      var count = new DOMParser().parseFromString(html, \'text/html\').getElementById(this._selectors.productCountId).innerHTML;\n      this.productCounts.forEach(function (productCount) {\n        return productCount.innerHTML = count;\n      });\n    }\n\n    /**\r\n     * Render Filter Tags\r\n     * @param {DOM} html\r\n     */\n  }, {\n    key: "renderFacetTags",\n    value: function renderFacetTags(html) {\n      var tags = new DOMParser().parseFromString(html, \'text/html\').querySelector(this._selectors.facetTags).innerHTML;\n      this.facetTags.forEach(function (tag) {\n        return tag.innerHTML = tags;\n      });\n    }\n\n    /**\r\n     * Init Event Listeners\r\n     */\n  }, {\n    key: "initEventListeners",\n    value: function initEventListeners() {\n      var _this4 = this;\n      // Form Inputs\n      this.activeForm.addEventListener(\'input\', window.bluedgeusa.core.Utils.debounce(function () {\n        return _this4.formSubmitHandler();\n      }, this.debounceSpeed));\n      this.facetsRemove.forEach(function (tag) {\n        return tag.addEventListener(\'click\', function (e) {\n          return _this4.removeFacetHandler(e);\n        });\n      });\n\n      // History State\n      window.addEventListener(\'popstate\', this.historyChangeHandler.bind(this));\n    }\n\n    /**\r\n     * on Form Submit handler\r\n     */\n  }, {\n    key: "formSubmitHandler",\n    value: function formSubmitHandler() {\n      this.fetchPageManager();\n    }\n\n    /**\r\n     * Remove Tags handler\r\n     * @param {Object} e\r\n     */\n  }, {\n    key: "removeFacetHandler",\n    value: function removeFacetHandler(e) {\n      e.preventDefault();\n      var searchParams = e.currentTarget.href.indexOf(\'?\') == -1 ? \'\' : e.currentTarget.href.slice(e.currentTarget.href.indexOf(\'?\') + 1);\n      var url = "".concat(window.location.pathname, "?section_id=").concat(this._id, "&").concat(searchParams);\n      this.fetchPageManager(url);\n    }\n\n    /**\r\n     * Change History State\r\n     * @param {Object} e\r\n     */\n  }, {\n    key: "historyChangeHandler",\n    value: function historyChangeHandler(e) {\n      var searchParams = e.state ? e.state.searchParams : this.searchParamsInitial;\n      if (searchParams === this.searchParamsPrev) return;\n\n      // updateHistoryHash === false - Hash just change, we do not update it again\n      this.fetchPageManager(null, false);\n    }\n\n    /**\r\n     * Update History State\r\n     */\n  }, {\n    key: "updateHistoryHash",\n    value: function updateHistoryHash() {\n      history.pushState({\n        searchParams: this.searchParams\n      }, \'\', "".concat(window.location.pathname).concat(this.searchParams && \'?\'.concat(this.searchParams)));\n    }\n\n    /**\r\n     * Render Fetch Error\r\n     * @param {String} err\r\n     */\n  }, {\n    key: "renderFetchError",\n    value: function renderFetchError(err) {\n      // Create new HTML element to append error\n      var h4 = document.createElement(\'h4\');\n      // Add error class\n      h4.classList.add(\'collection-fetch-error\');\n      // Error message\n      h4.innerText = \'An error occurred when fetching the products :(\';\n      // Reset product grid HTML\n      this.productGridContainer.innerHTML = \'\';\n      // Append Error Message\n      this.productGridContainer.append(h4);\n      // Console log error\n      console.error(\'ERROR FETCHING PRODUCTS\', err);\n    }\n\n    /**\r\n     * Build URL\r\n     * @param {String} searchParams (optional)\r\n     * @returns {String}\r\n     */\n  }, {\n    key: "buildURL",\n    value: function buildURL() {\n      var searchParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (searchParams) this.searchParams = searchParams;\n      return this.searchParams ? "".concat(window.location.pathname, "?section_id=").concat(this._id, "&").concat(this.searchParams) : "".concat(window.location.pathname, "?section_id=").concat(this._id);\n    }\n\n    /**\r\n     * Get Search Params\r\n     * @returns {Object}\r\n     */\n  }, {\n    key: "getSearchParam",\n    value: function getSearchParam() {\n      var formData = new FormData(this.activeForm);\n      return new URLSearchParams(formData).toString();\n    }\n\n    /**\r\n     * Get Search Params Object\r\n     * from the location.search url\r\n     * @returns {Object}\r\n     */\n  }, {\n    key: "getSearchParamObj",\n    value: function getSearchParamObj() {\n      var params = new URLSearchParams(window.location.search);\n      var obj = {};\n      var _iterator = _createForOfIteratorHelper(params),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            k = _step$value[0],\n            v = _step$value[1];\n          // Init obj key as Array\n          if (!obj[k]) obj[k] = [];\n          obj[k].push(v);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return obj;\n    }\n\n    /**\r\n     * Get sorted by Value\r\n     * @returns {String}\r\n     */\n  }, {\n    key: "getDefaultSortValue",\n    value: function getDefaultSortValue() {\n      return document.querySelector(this._selectors.defaultSort).value;\n    }\n\n    /**\r\n     * Set Visible form as the active form\r\n     */\n  }, {\n    key: "setActiveForm",\n    value: function setActiveForm() {\n      var _iterator2 = _createForOfIteratorHelper(this.forms),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var form = _step2.value;\n          if (form.offsetParent !== null) {\n            this.activeForm = form;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    /**\r\n     * Theme "Customize" panel shopify:section:load event listener\r\n     */\n  }, {\n    key: "onLoad",\n    value: function onLoad() {\n      // INIT\n      this.init();\n      window.lazyLoadInstance.update();\n    }\n\n    /**\r\n     * Theme "Customize" panel shopify:section:unload event listener\r\n     */\n  }, {\n    key: "onUnload",\n    value: function onUnload() {\n      var _this5 = this;\n      // Reset Active form on Window resize (from Mobile to desktop)\n      window.removeEventListener(\'resize\', window.bluedgeusa.core.Utils.debounce(function (e) {\n        return _this5.setActiveForm(e);\n      }, this.debounceSpeed));\n      this.activeForm.removeEventListener(\'input\', window.bluedgeusa.core.Utils.debounce(function () {\n        return _this5.formSubmitHandler();\n      }, this.debounceSpeed));\n      this.facetsRemove.forEach(function (tag) {\n        return tag.removeEventListener(\'click\', _this5.removeFacetHandler);\n      });\n\n      // History State\n      window.removeEventListener(\'popstate\', this.historyChangeHandler.bind(this));\n    }\n  }]);\n  return Facets;\n}(); // Export to theme namespace\nwindow.bluedgeusa.theme.Facets = Facets;\n\n//# sourceURL=webpack://starter-kit-2022/./src/scripts/sections/Facets.class.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/scripts/facets.js")})();